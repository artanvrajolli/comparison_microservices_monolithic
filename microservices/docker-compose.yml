services:
  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - BLOG_SERVICE_URL=http://blog-service:5001
      - USER_SERVICE_URL=http://user-service:5002
      - COMMENT_SERVICE_URL=http://comment-service:5003
    depends_on:
      - blog-service
      - user-service
      - comment-service
    networks:
      - backend

  # Blog Service
  blog-service:
    build: ./services/blog-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - MONGODB_URI=mongodb://mongodb:27017/blog-service
      - USER_SERVICE_URL=http://user-service:5002/api/users
      - COMMENT_SERVICE_URL=http://comment-service:5003/api/comments
    depends_on:
      - mongodb
    networks:
      - backend

  # User Service
  user-service:
    build: ./services/user-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGODB_URI=mongodb://mongodb:27017/user-service
      - BLOG_SERVICE_URL=http://blog-service:5001/api/blogs
      - COMMENT_SERVICE_URL=http://comment-service:5003/api/comments
    depends_on:
      - mongodb
    networks:
      - backend

  # Comment Service
  comment-service:
    build: ./services/comment-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - MONGODB_URI=mongodb://mongodb:27017/comment-service
      - USER_SERVICE_URL=http://user-service:5002/api/users
      - BLOG_SERVICE_URL=http://blog-service:5001/api/blogs
    depends_on:
      - mongodb
    networks:
      - backend

  # MongoDB
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend
    environment:
      - MONGO_INITDB_DATABASE=blog-db
    command: mongod --bind_ip_all

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # Blackbox Exporter
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox/blackbox.yml:/config/blackbox.yml
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - monitoring
    restart: unless-stopped

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - backend
      - monitoring
    restart: unless-stopped
    depends_on:
      - blackbox-exporter
      - node-exporter

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3030:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  backend:
    driver: bridge
  monitoring:
    driver: bridge 